<?xml version="1.0" encoding="UTF-8"?>
<vxml version = "2.1" xml:lang="fr-fr" >
   <!-- Définir le script javascript et les variables globales -->
   <script src="recettes.js"/>
   <var name="ingredient_choisi"/>
   <var name="recette_choisie"/>
   <var name="liste_instructions"/>
   <var name="nb" expr="0"/>

   <form id="start">
      <block>
         <prompt>
            <voice gender="female" age="50">
               <sentence> Bonjour, bienvenue sur notre serveur vocal de recettes de cuisine végétariennes. </sentence>
               <sentence> Vous avez faim mais pas d'inspiration ? Vous êtes au bon endroit. </sentence>
            </voice>
         </prompt>
         <goto next="#choix_menu"/>
      </block>
   </form>

   <!-- Menu principal : recette, végétarisme, projet, objectifs -->
   <menu id="choix_menu">
      <prompt>
         <voice gender="male" age="15">
            <sentence> Souhaitez-vous faire une 
               <emphasis level="strong"> recette </emphasis>, en savoir plus sur le 
               <emphasis level="strong"> végétarisme </emphasis> , sur ce 
               <emphasis level="strong"> projet </emphasis> ou sur ses 
               <emphasis level="strong"> objectifs ? </emphasis>
            </sentence>
            <sentence> Ou souhaitez-vous parler <emphasis> anglais </emphasis> ? </sentence>
         </voice>
      </prompt>

      <!-- Les deux premiers choix se font grâce à des grammaires stochastiques, on peut donc faire des phrases, pour les autres, il suffit d'utiliser un mot-clé -->
      <choice accept="approximate" next="#recherche_recettes">
         <grammar src="choix_recette_grammaire_stoch.vxml"/>
      </choice>
      <choice accept="approximate" next="#vegetarisme">
         <grammar src="choix_vegetarisme_grammaire_stoch.vxml"/>
      </choice>
      <choice accept="approximate" next="#apropos">
         Projet
      </choice>
      <choice accept="approximate" next="#objectifs">
         Objectifs
      </choice>
      <choice accept="approximate" next="#version_anglaise">
         Parler anglais
      </choice>

      <noinput> Dites l'un des mots suivants : recette, végétarisme, 
         <enumerate/>
      </noinput>
      <nomatch>  Dites l'un des mots suivants : recette, végétarisme, 
         <enumerate/>
      </nomatch>
   </menu>


   <!-- Accéder à la version anglaise (dans un fichier externe, qui reprend celui-ci mais traduit) -->
   <form id="version_anglaise">
      <block>
      <goto next="version_anglaise.vxml"/>
    </block>
   </form>

   <!-- Accéder aux prompts correspondants aux choix -->
   <form id="vegetarisme">
      <block>
         <prompt> Nous proposons des recettes végétariennes afin de vous encourager à diminuer votre consommation de produits issus des animaux, et pour vous prouver que ce n'est pas compliqué ! En effet, la diminution de la consommation de chair animale est bon pour l'environnement, pour la santé, et pour le bien-être des animaux. <break time="500ms"/> Et maintenant, </prompt>
         <goto next="#choix_menu"/>
      </block>
   </form>
   <form id="apropos">
      <block>
         <prompt> Ce serveur vocal a été réalisé dans le cadre du cours Serveurs vocaux interactifs du M2 Langue et Informatique de Sorbonne Université, en mars 2023, par Fanny Ducel. <break time="500ms"/> Et maintenant, </prompt>
         <goto next="#choix_menu"/>
      </block>
   </form>
   <form id="objectifs">
      <block>
         <prompt> L'objectif de ce serveur est de proposer des recettes végétariennes selon un ingrédient choisi par l'utilisateur, selon ses envies ou ce qu'il a à disposition, pour éviter le gaspillage par exemple. <break time="500ms"/> Et maintenant, </prompt>
         <goto next="#choix_menu"/>
      </block>
   </form>


   <!-- À partir, d'ici, tout ce qui suit découle du choix "recette" 
      Étape 1 : l'utilisateur donne un ingrédient souhaité, et le système propose une recette contenant cet ingrédient. Les ingrédients et le temps de préparation sont présentés.-->
   <form id="recherche_recettes">
      <field name="ingredient_choisii">
         <prompt>
     Quel ingrédient voulez-vous utiliser dans votre recette ? Pensez à regarder dans vos placards et frigo et privilégier un aliment qui périme bientôt !
    </prompt>
         <grammar src="recettes_grammaire_js.vxml"/>
         <noinput>
            <reprompt/>
         </noinput>
         <nomatch>
            <prompt>Désolé, je n'ai pas compris. Essayez un ingrédient comme : pâtes, lentilles, brocoli. </prompt>
            <reprompt/>
         </nomatch>
         <filled>
            <assign name="ingredient_choisi" expr="lastresult$.interpretation.self"/>
            <prompt> J'ai entendu 
               <value expr="ingredient_choisi"/>
            </prompt>
         </filled>
      </field>
      <block>
         <!--ATTENTION, tous les ingrédients doivent avoir 3 recettes associées -->
         <assign name="recette_choisie" expr="getRecipesByIngredient(ingredient_choisi)[getRandomInt(0,2)]"/>
         <prompt>
        D'accord ! Je vous propose de cuisiner une recette de
            <emphasis>
               <value expr="recette_choisie"/>
            </emphasis>. Vous aurez besoin de 
         </prompt>
         <var name="liste_ingredients" expr="getIngredientsByRecipe(recette_choisie)"/>
         <var name="temps_recette" expr="getTimeByRecipe(recette_choisie)"/>
         <foreach item="ingr" array="liste_ingredients">
            <prompt>, 
               <value expr="ingr"/>
            </prompt>
         </foreach>
       Cela prendra 
         <value expr="temps_recette"/>. 
         <goto next="#valider_recette"/>
      </block>
   </form>


   <!-- Attente de la confirmation ("oui") de l'utilisateur. -->
   <form id="valider_recette">
      <field name="confirmation">
         <prompt> Cela vous convient ? </prompt>
         <grammar src="ouinon.vxml"/>
         <noinput>
            <reprompt/>
         </noinput>
         <nomatch>
            <prompt>Désolé, je n'ai pas compris.</prompt>
            <reprompt/>
         </nomatch>
         <filled>
            <if cond="confirmation == 'oui'">
          C'est parti ! N'hésitez pas à me demander d'attendre ou de répéter chaque instruction.
               <goto next="#commencer_recette"/>
               <else/>
               <goto next="#recherche_recettes"/>
            </if>
         </filled>
      </field>
   </form>


   <!-- Si la recette proposée précédemment a été confirmée, la recette débute : chaque instruction est énoncée. -->
   <form id="commencer_recette">
      <block>
         <assign name="liste_instructions" expr="getInstructionsByRecipe(recette_choisie)"/>
         <prompt>
            <value expr="liste_instructions[nb]"/>
         </prompt>
         <assign name="nb" expr="nb + 1"/>
         <goto next="#etapeok"/>
      </block>
   </form>


   <!-- Après chaque énonciation d'instruction, l'utilisateur confirme qu'il a compris, ou il demande à répéter l'instruction, ou il demande d'attendre quelques secondes avant de continuer. Si l'instruction énoncée était la dernière, on redirige vers la fin du script et la sortie de l'appel. -->
   <form id="etapeok">
      <field name="ok">
         <prompt> C'est bon ? </prompt>
         <grammar src="ouinon.vxml"/>
         <noinput>
            <reprompt/>
         </noinput>
         <nomatch>
            <prompt>Désolé, je n'ai pas compris.</prompt>
            <reprompt/>
         </nomatch>
         <filled>
            <!-- Cas 1 : l'utilisateur comprend (il dit "oui"), on continue -->
            <if cond="ok == 'oui'">
               <prompt> Très bien. </prompt>
               <if cond="nb + 1 > liste_instructions.length">
                  <prompt> C'est fini, bon appétit ! </prompt>
                  <goto next="#fin"/>
                  <else/>
                  <prompt> Ensuite, </prompt>
                  <goto next="#commencer_recette"/>
               </if>

            <!-- Cas 2 : l'utilisateur demande à attendre ("attends", "attendez", "pause", "stop"), le système attend 5 secondes avant de poursuivre. -->
            <elseif cond="ok == 'attends'"/>
               <prompt> D'accord, j'attends 5 secondes.
                  <break time="5000ms"/>
               </prompt>
               <goto next="#etapeok"/>
            <elseif cond="ok == 'attendez'"/>
               <prompt> D'accord, j'attends 5 secondes.
                  <break time="5000ms"/>
               </prompt>
               <goto next="#etapeok"/>
            <elseif cond="ok == 'pause'"/>
               <prompt> D'accord, j'attends 5 secondes.
                  <break time="5000ms"/>
               </prompt>
               <goto next="#etapeok"/>
            <elseif cond="ok == 'stop'"/>
               <prompt> D'accord, j'attends 5 secondes.
                  <break time="5000ms"/>
               </prompt>
            <goto next="#etapeok"/>

            <!-- Cas 3 : l'utilisateur demande de répéter ("répète", "répétez"), le système répète l'instruction précédente plus lentement et continue. -->
            <elseif cond="ok == 'répétez'"/>
               <prompt>
                  <voice>
                     <prosody rate="slow"> Je répète 
                        <value expr="liste_instructions[nb - 1]"/>
                     </prosody>
                  </voice>
               </prompt>
               <goto next="#etapeok"/>
            <elseif cond="ok == 'répète'"/>
               <prompt>
                  <voice>
                     <prosody rate="slow"> Je répète 
                        <value expr="liste_instructions[nb - 1]"/>
                     </prosody>
                  </voice>
               </prompt>
               <goto next="#etapeok"/>

            <else/>
               <prompt> Essayez plutôt un mot-clé comme "oui", "attends", ou "répétez". </prompt>
               <goto next="#etapeok"/>
            </if>
         </filled>
      </field>
   </form>


   <!-- Fin de l'appel, le système raccroche. -->
   <form id="fin">
      <block>
    À bientôt !
      </block>
   </form>

</vxml>